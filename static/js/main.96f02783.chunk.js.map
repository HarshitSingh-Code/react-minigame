{"version":3,"sources":["App.jsx","reportWebVitals.jsx","index.jsx"],"names":["App","prop","current","board","calculateWinner","setBoard","setCurrent","players","ai","human","useEffect","newBoard","bestMove","scores","minimax","calcboard","depth","alpha","beta","isMaximizing","result","bestScore","Infinity","x","score","Math","max","min","playerValue","id","winner","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Index","useState","Array","fill","setWinner","setPlayers","squares","lines","i","length","a","b","c","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96f02783.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./css/App.css\";\r\n\r\nfunction App(prop) {\r\n\r\n  const { current, board, calculateWinner, setBoard, setCurrent, players } = prop;\r\n  const { ai, human } = players;\r\n\r\n  useEffect(() => {\r\n    if (current === 'ai' && calculateWinner(board)[0] === false) {\r\n      const newBoard = [...board];\r\n      newBoard[bestMove(newBoard)] = ai;\r\n      setCurrent('human');\r\n      setBoard(newBoard);\r\n    }\r\n  });\r\n\r\n  const scores = {\r\n    [human]: -1,\r\n    [ai]: 1,\r\n    tie: 0,\r\n  };\r\n\r\n  const minimax = (calcboard, depth, alpha, beta, isMaximizing) => {\r\n    let result = calculateWinner(calcboard)[0];\r\n    if (result !== false) {\r\n      return scores[result];\r\n    } else if (isMaximizing) {\r\n      let bestScore = -Infinity;\r\n      for (let x in calcboard) {\r\n        if (calcboard[x] === \"\") {\r\n          calcboard[x] = ai;\r\n          let score = minimax(calcboard, depth + 1, alpha, beta, false);\r\n          calcboard[x] = \"\";\r\n          bestScore = Math.max(score, bestScore);\r\n          alpha = Math.max(alpha, score)\r\n          if (beta <= alpha) break;\r\n        }\r\n      }\r\n      return bestScore;\r\n    } else {\r\n      let bestScore = Infinity;\r\n      for (let x in calcboard) {\r\n        if (calcboard[x] === \"\") {\r\n          calcboard[x] = human;\r\n          let score = minimax(calcboard, depth + 1, alpha, beta, true);\r\n          calcboard[x] = \"\";\r\n          bestScore = Math.min(score, bestScore);\r\n          beta = Math.min(beta, score)\r\n          if (beta <= alpha) break;\r\n        }\r\n      }\r\n      return bestScore;\r\n    }\r\n  };\r\n\r\n  const bestMove = (newBoard) => {\r\n    let bestScore = -Infinity;\r\n    let bestMove;\r\n    for (let x in newBoard) {\r\n      if (newBoard[x] === \"\") {\r\n        newBoard[x] = ai;\r\n        let score = minimax(newBoard, 0, -Infinity, Infinity, false);\r\n        newBoard[x] = \"\";\r\n        if (score > bestScore) {\r\n          bestScore = score;\r\n          bestMove = x;\r\n        }\r\n      }\r\n    }\r\n    return bestMove;\r\n  };\r\n\r\n  const playerValue = (id) => {\r\n    if (prop.winner !== \"\") return;\r\n    else if (board[id - 1] !== \"\") return;\r\n    else if (current === \"human\") {\r\n      const newBoard = [...board];\r\n      newBoard[id - 1] = human;\r\n      setCurrent(\"ai\");\r\n      setBoard(newBoard);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"button\" onClick={() => playerValue(1)}>{board[0]}</button>\r\n      <button className=\"button\" onClick={() => playerValue(2)}>{board[1]}</button>\r\n      <button className=\"button\" onClick={() => playerValue(3)}>{board[2]}</button>\r\n      <button className=\"button\" onClick={() => playerValue(4)}>{board[3]}</button>\r\n      <button className=\"button\" onClick={() => playerValue(5)}>{board[4]}</button>\r\n      <button className=\"button\" onClick={() => playerValue(6)}>{board[5]}</button>\r\n      <button className=\"button\" onClick={() => playerValue(7)}>{board[6]}</button>\r\n      <button className=\"button\" onClick={() => playerValue(8)}>{board[7]}</button>\r\n      <button className=\"button\" onClick={() => playerValue(9)}>{board[8]}</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst Index = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(\"\"));\r\n  const [winner, setWinner] = useState(\"\");\r\n  const [current, setCurrent] = useState(\"human\");\r\n  const [players, setPlayers] = useState({ ai: \"O\", human: \"X\" });\r\n\r\n  useEffect(() => {\r\n    if (calculateWinner(board)[0]) {\r\n      setWinner(calculateWinner(board)[0]);\r\n    }\r\n  }, [board]);\r\n\r\n  const calculateWinner = (squares) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (\r\n        squares[a] &&\r\n        squares[a] === squares[b] &&\r\n        squares[b] === squares[c]\r\n      ) {\r\n        return [squares[a], a, b, c];\r\n      }\r\n    }\r\n    if (!squares.includes(\"\")) {\r\n      return [\"tie\"];\r\n    }\r\n    return [false];\r\n  };\r\n\r\n  const restart = () => {\r\n    setBoard(Array(9).fill(\"\"));\r\n    setWinner(\"\");\r\n    if (players.ai === 'O') {\r\n      setCurrent('human')\r\n    } else {\r\n      setCurrent('ai')\r\n    }\r\n  };\r\n\r\n  const switchPlayer = () => {\r\n    if (players['human'] === \"X\") {\r\n      setPlayers({ ai: \"X\", human: \"O\" });\r\n      setCurrent(\"ai\");\r\n    } else if (players['human'] === \"O\") {\r\n      setPlayers({ ai: \"O\", human: \"X\" });\r\n      setCurrent(\"human\");\r\n    }\r\n    setBoard(Array(9).fill(\"\"));\r\n    setWinner(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        <div className=\"board\">\r\n          <App\r\n            setBoard={setBoard}\r\n            winner={winner}\r\n            board={board}\r\n            calculateWinner={calculateWinner}\r\n            current={current}\r\n            setCurrent={setCurrent}\r\n            players={players}\r\n          />\r\n        </div>\r\n        <div className=\"result\">\r\n          <h2>\r\n            {winner !== \"\" && winner !== \"tie\" ? `WINNER IS ${winner}` : \"\"}\r\n            {winner === \"tie\" ? `IT'S A TIE` : \"\"}\r\n          </h2>\r\n          <div className=\"fnc\">\r\n            {winner !== \"\" && (\r\n              <button className=\"resetbutton\" onClick={() => restart()}>\r\n                RESTART\r\n              </button>\r\n            )}\r\n            {winner !== \"\" && (\r\n              <button className=\"switchbutton\" onClick={() => switchPlayer()}>\r\n                PLAY AS {players[\"ai\"]}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Index />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}